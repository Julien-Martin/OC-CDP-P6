type User {
    id: ID! @id
    name: Name
    email: String! @unique
    password: String!
    address: Address
    phone: String
    siret: String!
    useVAT: Boolean @default(value: false)
    paymentInfo: String
    VATnumber: String
    RCS: String
    RM: String
    commercialName: String
    ape: String
    role: String
    status: String
    cgv: String
    products: [Product]! @relation(name: "UserProduct", link: INLINE, onDelete: CASCADE)
    clients: [Client]! @relation(name: "UserClient", link: INLINE, onDelete: CASCADE)
    invoices: [Invoice]! @relation(name: "UserInvoice", link: INLINE, onDelete: CASCADE)
    estimates: [Estimate]! @relation(name: "UserEstimate", link: INLINE, onDelete: CASCADE)
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updateAt
}

type Client {
    id: ID! @id
    user: User! @relation(name: "UserClient")
    name: Name!
    status: Status! @relation(link: INLINE)
    email: String
    address: Address!
    phone: String
    company: String
    invoices: [Invoice]! @relation(name: "ClientInvoice", link: INLINE)
    estimates: [Estimate]! @relation(name: "ClientEstimate",link: INLINE)
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updateAt
}

type Product {
    id: ID! @id
    user: User! @relation(name: "UserProduct")
    description: String!
    priceht: Float!
    vat: Float!
    pricettc: Float!
    unit: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updateAt
}

type Status {
    id: ID! @id
    form: String! @unique
    title: String! @unique
}

type Invoice {
    id: ID! @id
    user: User! @relation(name: "UserInvoice")
    client: Client! @relation(name: "ClientInvoice")
    state: State!
    invoiceNumber: String!
    billingDate: DateTime!
    paymentCondition: Float!
    deadline: DateTime!
    lateFee: Float!
    message: String
    products: [Item!]!
    price: Float!
    footNote: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updateAt
}

type Estimate {
    id: ID! @id
    user: User! @relation(name: "UserEstimate")
    client: Client! @relation(name: "ClientEstimate")
    state: State!
    estimateNumber: String!
    startedDate: DateTime!
    deliveryDate: DateTime!
    validityDate: DateTime!
    message: String
    products: [Item!]!
    price: Float!
    footNote: String
    createdAt: DateTime @createdAt
    updatedAt: DateTime @updateAt
}

enum State {
    DRAFT,
    PENDING,
    DONE
}

type Item @embedded {
    product: Product!
    quantity: Float!
}

type Name @embedded {
    firstname: String!
    lastname: String!
}

type Address @embedded {
    street: String!
    street2: String
    postalcode: String!
    city: String!
    country: String!
}