scalar Date
scalar JSON

type Query {
    getUser: User
    getClients: [Client]
    getProducts: [Product]
    getInvoices: [Invoice]
    getStatus: [Status]
}

type Mutation {
    captureEmail(email: String!): User
    signup(id: String!, firstname: String!, lastname: String!, password: String!): AuthPayload!
    login(email: String!, password: String!): AuthPayload!
    createClient(lastname: String!, firstname: String!, email: String, address: String, phone: String, company: String): Client!
    updateClient(id: String!, lastname: String, firstname: String, email: String, address: String, phone: String, company: String): Client!
    deleteClient(id: String!): Boolean
    createProduct(description: String!, priceht: Float!, vat: Float!, pricettc: Float!, unit: String): Product!
    updateProduct(id: String!, description: String, priceht: Float, vat: Float, pricettc: Float, unit: String): Product!
    deleteProduct(id: String!): Boolean
    createInvoice(clientId: String, invoiceNumber: String!, deliveryDate: Date!, paymentDate: Date!, price: Float!, products: [JSON]): Invoice!
    validateInvoice(id: String!): Invoice!
    updateInvoice(id: String!, clientId: String, deliveryDate: Date, paymentDate: Date, price: Float, products: [JSON], isValidate: Boolean): Invoice!
    deleteInvoice(id: String!): Boolean
    createStatus(form: String!, title: String!): Status
    updateStatus(form: String, title: String): Status
    deleteStatus(id: String!): Boolean
}

type User {
    id: String
    lastname: String
    firstname: String
    email: String
    address: String
    phone: String
    siret: String
    useVAT: Boolean
    paymentInfo: String
    VATnumber: String
    RCS: String
    RM: String
    commercialName: String
    ape: String
    role: String
    createdAt: Date
    status: String
    clients: [Client]
    products: [Product]
    invoices: [Invoice]
}

type Client {
    id: String
    lastname: String
    firstname: String
    email: String
    address: String
    phone: String
    company: String
    invoices: [Invoice]
}

type Status {
    id: String
    form: String
    title: String
}

type Product {
    userId: String
    id: String
    description: String
    priceht: Float
    vat: Float
    pricettc: String
    unit: String
}

type Invoice {
    id: String
    user: User
    client: Client
    invoiceNumber: String
    deliveryDate: Date
    paymentDate: Date
    price: Float
    products: [Item]
    isValidate: Boolean
}

type Item {
    product: Product
    quantity: Float
}

type AuthPayload {
    token: String!
    user: User!
}